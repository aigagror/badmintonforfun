# Generated by Django 2.0.2 on 2018-03-27 22:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(unique=True, verbose_name='date of announcement')),
                ('title', models.CharField(max_length=64)),
                ('entry', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.CharField(choices=[('PRESIDENT', 'President'), ('TREASURER', 'Treasurer'), ('OFFICER', 'Officer')], max_length=64)),
                ('pitch', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='date of the election')),
                ('endDate', models.DateField(blank=True, null=True, verbose_name='election end date')),
            ],
        ),
        migrations.CreateModel(
            name='Interested',
            fields=[
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('formerBoardMember', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateTimeField(verbose_name='date started')),
                ('scoreA', models.IntegerField()),
                ('scoreB', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PlayedIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CASUAL', 'Casual'), ('RANKED', 'Ranked'), ('KOTH', 'King of the Hill')], max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='date of session')),
                ('number_of_courts', models.IntegerField(default=4)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='date of tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote', to='api.Campaign')),
            ],
        ),
        migrations.CreateModel(
            name='FinishedMatch',
            fields=[
                ('match_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Match')),
                ('endDate', models.DateTimeField(verbose_name='date ended')),
            ],
            bases=('api.match',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('interested_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Interested')),
                ('level', models.IntegerField(default=0)),
                ('private', models.BooleanField(default=False)),
                ('dateJoined', models.DateField(verbose_name='date joined')),
                ('bio', models.CharField(blank=True, default='', max_length=500)),
            ],
            bases=('api.interested',),
        ),
        migrations.AddField(
            model_name='playedin',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Match'),
        ),
        migrations.AddField(
            model_name='party',
            name='queue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Queue'),
        ),
        migrations.AddField(
            model_name='match',
            name='court',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Court'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Tournament'),
        ),
        migrations.AddField(
            model_name='court',
            name='queue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Queue'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Election'),
        ),
        migrations.CreateModel(
            name='BoardMember',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Member')),
                ('job', models.CharField(choices=[('PRESIDENT', 'President'), ('TREASURER', 'Treasurer'), ('OFFICER', 'Officer')], max_length=64)),
            ],
            bases=('api.member',),
        ),
        migrations.AddField(
            model_name='vote',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voter', to='api.Member'),
        ),
        migrations.AddField(
            model_name='playedin',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Member'),
        ),
        migrations.AddField(
            model_name='party',
            name='leader',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='my_party', to='api.Member'),
        ),
        migrations.AddField(
            model_name='member',
            name='party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Party'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='campaigner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Member'),
        ),
        migrations.AlterUniqueTogether(
            name='playedin',
            unique_together={('member', 'team', 'match')},
        ),
    ]
